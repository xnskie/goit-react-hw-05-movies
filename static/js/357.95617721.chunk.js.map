{"version":3,"file":"static/js/357.95617721.chunk.js","mappings":"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","sources":["components/Back.jsx","webpack://react-homework-template/./src/components/MovieData/movie-data.module.css?9d8f","components/MovieData/MovieData.jsx","pages/MovieDetalis/MovieDatails.jsx","services/api.js","services/constans.js"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: blue;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n    return (\n        <StyledLink to={to}>\n            <HiArrowLeft size=\"12\" />\n            {children}\n        </StyledLink>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movie-data_container__k4YZL\",\"box\":\"movie-data_box__UvMl4\",\"poster\":\"movie-data_poster__zmvdZ\",\"boxData\":\"movie-data_boxData__OuuOh\",\"listGenres\":\"movie-data_listGenres__zTBXN\",\"list\":\"movie-data_list__66s5k\",\"title\":\"movie-data_title__pWrLo\",\"link\":\"movie-data_link__QXFNn\"};","import PropTypes from 'prop-types';\nimport css from './movie-data.module.css'\nimport { NavLink } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\nimport { baseImgUrl } from 'services/constans';\n\nexport const MovieData = ({ url, tag, title, score, overview, genres }) => {\n    return (\n        <div className={css.container}>\n            <div className={css.box}>\n                <img className={css.poster} src={baseImgUrl + url} alt={tag} />\n\n                <div className={css.boxData}>\n                    <h2>{title}</h2>\n                    <p>User Score: {Math.round(score * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h4>Genres</h4>\n                    <ul className={css.listGenres}>\n                        {genres.map(genre => (\n                            <li key={genre.id}>{genre.name}</li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n            <p className={css.title}>Additional information</p>\n            <ul className={css.list}>\n                <li>\n                    <NavLink className={css.link} to=\"cast\">Cast</NavLink>\n                </li>\n                <li>\n                    <NavLink className={css.link} to=\"reviews\">Reviews</NavLink>\n                </li>\n            </ul>\n            <Outlet />\n        </div>\n    );\n};\n\nMovieData.propTypes = {\n    url: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};","import { BackLink } from 'components/Back';\nimport { MovieData } from 'components/MovieData/MovieData';\nimport { useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\n\nconst MovieDetails = () => {\n    const [movieDetails, setMovieDetails] = useState(null);\n    const location = useLocation();\n    const ref = useRef(location.state?.from ?? '/movies');\n\n    const { movieId } = useParams();\n    useEffect(() => {\n        async function fetchMoviesById() {\n            try {\n                const data = await fetchMovieDetails(movieId);\n\n                setMovieDetails(data);\n            } catch {\n                console.log(Error);\n            }\n        }\n        fetchMoviesById();\n    }, [movieId]);\n\n    return (\n        <>\n            <BackLink to={ref.current}>Go back</BackLink>\n            {movieDetails && (\n                <MovieData\n                    url={movieDetails.poster_path}\n                    tag={movieDetails.title}\n                    title={movieDetails.title}\n                    score={movieDetails.vote_average}\n                    overview={movieDetails.overview}\n                    genres={movieDetails.genres}\n                />\n            )}\n        </>\n    );\n};\n\nexport default MovieDetails;","\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = 'd5fa40ad6c43c0e4781fcc955d1dd9a4';\n\nexport const fetchTrendingMovies = async () => {\n    const resp = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n\n    return resp.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n    const resp = await axios.get(\n        `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    return resp.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n    const resp = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n\n    return resp.data;\n};\n\nexport const fetchMovieCredits = async id => {\n    const resp = await axios.get(\n        `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n\n    return resp.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n    const resp = await axios.get(\n        `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n    );\n\n    return resp.data.results;\n};","export const baseImgUrl = 'https://image.tmdb.org/t/p/w500';"],"names":["StyledLink","styled","NavLink","BackLink","to","children","size","MovieData","url","tag","title","score","overview","genres","className","css","src","baseImgUrl","alt","Math","round","map","genre","name","id","useState","movieDetails","setMovieDetails","location","useLocation","ref","useRef","state","from","movieId","useParams","useEffect","fetchMovieDetails","data","console","log","Error","fetchMoviesById","current","poster_path","vote_average","axios","apiKey","fetchTrendingMovies","resp","results","fetchSearchMovie","query","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}